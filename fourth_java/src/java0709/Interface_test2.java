package java0709;

public class Interface_test2 {

}



/*
인터페이스	 특징 

표준화: 인터페이스는 클래스가 구현해야 하는 메서드의 집합을 정의합니다. 
이를 통해 인터페이스를 구현하는 클래스들이 동일한 메서드 서명을 가지게 되어 일관성을 유지할 수 있습니다.

다형성: 인터페이스는 다형성을 지원합니다. 즉, 인터페이스 타입의 참조 변수가 이를 구현한 다양한 객체들을 참조할 수 있게 합니다.
이는 코드의 유연성과 재사용성을 높이는 데 도움이 됩니다.

느슨한 결합: 인터페이스를 사용하면 클래스 간의 결합도를 낮출 수 있습니다. 
이는 시스템의 유지보수성을 높이고, 변경에 유연하게 대응할 수 있게 합니다.

다중 상속의 대안: 자바는 클래스의 다중 상속을 지원하지 않지만, 인터페이스를 통해 다중 상속의 효과를 낼 수 있습니다. 
하나의 클래스가 여러 인터페이스를 구현할 수 있습니다.


데이터만 다룰꺼면 인터페이스가 좋다. 

*/

// 사용자 요청 처리 클래스 -> 컨트롤 클래스 
// 사용자 요청에 필요한 데이터 가공 및 수집 실행 클래스 -> 서비스 클래스
// 데이터만 저장하는 클래스 -> 사용자에게 제공할 데이터 클래스 -> VO,DTO
// 									 -> 데이터베이스에 저장할 데이터 클래스 -> Entity 
// 데이터베이스 처리 인터페이스 -> repository 