package java0702_2;

public class study_class2 {

	public static void main(String[] args) {
		// static은 제어자로서 만들어지는 시기를 변경해준다?  (정적변수) = (정적 메서드)
		// static void = 클래스 메서드 
		
		//Car car1 = new Car(); 
		// 위에 참조변수를 생성 및 선언해야 비로소 메모리에 할당된다. 그 전에는 존재하지 않음.
		
		System.out.println(Car.제조사);
		
		
		Car car1;
		
		
		car1 = new Car(); // carName, 배기량, 연료 변수 생성
		car1.carName = "쏘나타";
		car1.연료 = "휘발유";
		
		
		// 먼저 참조변수를 선언하더라도 메모리에 할당되지 않았기 때문에 사용할 수 없다. 
		
		
		
		
		
		
		
		

	}

}


// 클래스 내부에 선언되는 변수(또는 배열)는 두 가지가 있다. 
// 클래스 변수, 인스턴스	변수 

class Car{ // 클래스 = 객체 
static String 제조사 = "현대"; 	// 클래스 변수 (공유 자원)
	
	String carName; // 인스턴스 변수
	int 배기량; 	//	인스턴스 변수
	String 연료; 	//	인스턴스 변수 
	
	/*
	 * 새로 만드는 new 연산자 안에는 인스턴스만 포함하기 때문에 클래스 변수인 제조사는 
	 * 포함되지 않는다.  다만 new를  통해 만들기 이전부터 존재한다.
	 * 인스턴스변수는 클래스 객체 생성시 메모리가 할당된다. (new 연산자를 통한)
	 * 클래스 객체 생성은 new 연산자를 통한다.
	 * 클래스 변수는 프로그램 실행할 때 메모리에 로드하면서 생성된다.
	 * 클래스 변수는 변경은 가능하나 변경할시 클래스 안에 다른 인스턴스들의 동작들도 오류가 날 수 있다. 
	 * 그러므로 클래스 변수의 수정은 신중해야한다. 바꾸려면 동기화 작업을 해야한다.
	 * 주로 많이 쓰는건 인스턴스 변수이다.
	 */
};